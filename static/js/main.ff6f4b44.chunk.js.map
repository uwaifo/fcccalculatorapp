{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_Users_overstandmac_Desktop_fcccalculatorapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_overstandmac_Desktop_fcccalculatorapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_overstandmac_Desktop_fcccalculatorapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","prevVal","curVal","clear","bind","_Users_overstandmac_Desktop_fcccalculatorapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleNumber","handleOperator","handleDecimal","handleEval","e","setState","target","value","test","replace","includes","eval","react__WEBPACK_IMPORTED_MODULE_6___default","id","Buttons","numbers","operator","decimal","_material_ui_core_Link__WEBPACK_IMPORTED_MODULE_8___default","href","variant","React","Component","onClick"],"mappings":"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","file":"static/js/main.ff6f4b44.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"../src/App.css\";\nimport Link from \"@material-ui/core/Link\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevVal: \"\",\n      curVal: \"0\"\n    };\n    this.clear = this.clear.bind(this);\n    this.handleNumber = this.handleNumber.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleEval = this.handleEval.bind(this);\n  }\n\n  //storing current number\n  handleNumber(e) {\n    if (this.state.curVal === \"0\") {\n      this.setState({\n        curVal: e.target.value\n      });\n    } else {\n      this.setState({\n        curVal: this.state.curVal + e.target.value\n      });\n    }\n  }\n\n  //if u click on operator symbol it will\n  //store curVal in prevVal\n  //add the operator you pressed\n  //and return 0 for curVal\n  handleOperator(e) {\n    let prevVal = this.state.prevVal;\n\n    if (prevVal === \"\") {\n      this.setState({\n        prevVal: this.state.curVal + e.target.value,\n        curVal: \"0\"\n      });\n    } else if (this.state.curVal === \"0\" && /[+\\-*/]$/.test(prevVal)) {\n      this.setState({\n        prevVal: prevVal.replace(/[+\\-*/]$/, e.target.value),\n        curVal: \"0\"\n      });\n    } else if (prevVal.includes(\"=\")) {\n      this.setState({\n        prevVal: this.state.curVal + e.target.value,\n        curVal: \"0\"\n      });\n    } else {\n      this.setState({\n        prevVal: prevVal + this.state.curVal + e.target.value,\n        curVal: \"0\"\n      });\n    }\n  }\n\n  //handling decimal\n  // if current value includes decimal ignore since there can only be one decimal in a number\n  handleDecimal(e) {\n    if (!this.state.curVal.includes(\".\")) {\n      this.setState({\n        curVal: this.state.curVal + \".\"\n      });\n    }\n  }\n\n  //evaluate prevVal and putting the output to curVal\n  //since we store all number and operator in order in prevVal\n  // i use eval to add them together and put the value to curVal\n  handleEval(e) {\n    let value = this.state.prevVal + this.state.curVal;\n    this.setState({\n      prevVal: value + \"=\",\n      curVal: eval(value)\n    });\n  }\n\n  //clear calculator\n  clear() {\n    this.setState({\n      prevVal: \"\",\n      curVal: \"0\"\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"main\">\n        <p id=\"previous\">{this.state.prevVal}</p>\n        <p id=\"display\">{this.state.curVal}</p>\n        <Buttons\n          clear={this.clear}\n          numbers={this.handleNumber}\n          operator={this.handleOperator}\n          decimal={this.handleDecimal}\n          eval={this.handleEval}\n        />\n        <p>\n          <Link href=\"https://github.com/uwaifo\" variant=\"body1\">\n            Designed by OverstandApps\n          </Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nconst Buttons = props => {\n  return (\n    <div id=\"button\">\n      <button id=\"clear\" value=\"AC\" onClick={props.clear}>\n        AC\n      </button>\n      <button id=\"multiply\" value=\"*\" onClick={props.operator}>\n        *\n      </button>\n      <button id=\"divide\" value=\"/\" onClick={props.operator}>\n        /\n      </button>\n      <button id=\"one\" value=\"1\" onClick={props.numbers}>\n        1\n      </button>\n      <button id=\"two\" value=\"2\" onClick={props.numbers}>\n        2\n      </button>\n      <button id=\"three\" value=\"3\" onClick={props.numbers}>\n        3\n      </button>\n      <button id=\"add\" value=\"+\" onClick={props.operator}>\n        +\n      </button>\n      <button id=\"four\" value=\"4\" onClick={props.numbers}>\n        4\n      </button>\n      <button id=\"five\" value=\"5\" onClick={props.numbers}>\n        5\n      </button>\n      <button id=\"six\" value=\"6\" onClick={props.numbers}>\n        6\n      </button>\n      <button id=\"subtract\" value=\"-\" onClick={props.operator}>\n        -\n      </button>\n      <button id=\"seven\" value=\"7\" onClick={props.numbers}>\n        7\n      </button>\n      <button id=\"eight\" value=\"8\" onClick={props.numbers}>\n        8\n      </button>\n      <button id=\"nine\" value=\"9\" onClick={props.numbers}>\n        9\n      </button>\n      <button id=\"zero\" value=\"0\" onClick={props.numbers}>\n        0\n      </button>\n      <button id=\"decimal\" value=\".\" onClick={props.decimal}>\n        .\n      </button>\n      <button id=\"equals\" value=\"=\" onClick={props.eval}>\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}